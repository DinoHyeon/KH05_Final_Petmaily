<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.petmily.dao.memberDAO.MemberInter">
	<!-- 로그인 체크 -->
	<select id="loginConfirmPage" resultType="MemberDTO">
		SELECT member_id, member_state FROM member WHERE member_id=#{param1
		} AND (member_state='member' OR member_state='admin' OR member_state='불량회원')
	</select>
	
	<!-- 회원가입 요청 -->
   <insert id="joinConfirmPage" parameterType="MemberDTO">
      INSERT INTO member(member_id, member_pw, member_name, member_email, member_phone, member_addr, member_state, member_date)
      VALUES(#{member_id},#{member_pw},#{member_name},#{member_email},#{member_phone},#{member_addr},'member', SYSDATE)
   </insert>
   
   <!-- 아이디 중복확인 요청 -->
   	<select id="idChkPage" resultType="String">
		SELECT member_id FROM member WHERE member_id=#{param1}
	</select>
	
	<!-- 아이디 찾기 요청 -->
	<select id="idSearchPage" resultType="String">
		SELECT member_id FROM member WHERE member_name=#{param1} AND member_email=#{param2} AND member_phone=#{param3}
	</select>
	
	<!-- 비밀번호 찾기 요청 -->
	<select id="pwSearchPage" resultType="String">
		SELECT member_id FROM member WHERE member_id=#{param1} AND member_email=#{param2}
	</select>
	
	<!-- 비밀번호 변경 요청 -->
	<update id="changePwPage" parameterType="String">
		UPDATE member SET member_pw=#{param2} WHERE member_id=#{param1}
	</update>
	
	<!-- 회원정보 수정을 위한 비밀번호 확인 -->
	<select id="memberUpdateConfirm" resultType="String">
		SELECT member_id FROM member WHERE member_id =#{param1} AND member_pw=#{param2}
	</select>
	
	<!-- 회원 정보 수정 페이지 -->
	<select id="memberUpdateForm" resultType="MemberDTO">
	 	SELECT * FROM member WHERE member_id= #{param1}
	 </select>
	 
	 <!-- 회원정보 수정 요청 -->
	<update id="memberUpdatePage" parameterType="MemberDTO">
	 UPDATE member
	 	<set>
	 		<if test="!member_pw.equals('')">member_pw = #{member_pw},</if>
	 		<if test="!member_phone.equals('')">member_phone = #{member_phone},</if>
	 		<if test="!member_addr.equals('')">member_addr = #{member_addr}</if>
	 	</set>	 
	 	WHERE member_id = #{member_id}
	 </update>
	 
	 <!-- 회원 정보 탈퇴 요청 -->
    <update id="deleteUpdatePage" parameterType="String">
      UPDATE member m SET  m.member_state='leave',m.member_date=SYSDATE+7 WHERE member_id=#{param1}
   </update>
	
	<!-- 비밀번호 암호화 -->
	<select id="protectPwChk" resultType="String">
		SELECT member_pw FROM member WHERE member_id=#{param1}
	</select>
	
	
	<!--회원 완전 삭제  -->
   <delete id="deleteFinish" parameterType="hashMap">
      DELETE FROM member WHERE member_state=#{param1}
   </delete>
   
   <!-- 비밀번호 찾을때 이메일과 아이디 확인 -->
   <select id="ChkPwEmail" resultType="String">
      SELECT member_id FROM member WHERE member_id=#{param1} AND member_email=#{param2}
   </select>
	
	
	
	
	
	<!--소현 : 관리자 페이지 회원 상태 리스트 페이징 리스트 출력   -->
   <select id="getmemberList" resultType="MemberDTO" parameterType="hashMap">
   Select member_id, member_name, member_email, member_state 
   From(
   SELECT member_id, member_name, member_email, member_state,
   ROW_NUMBER() OVER(ORDER BY member_id DESC) AS rnum
   from Member
   ) WHERE rnum BETWEEN #{start} AND #{end}	
   </select>
	
	
   <!--소현 : 관리자 페이지 회원 상태 리스트 페이징   -->
    <select id="memberallCount" resultType="Integer" parameterType="hashMap">
		SELECT COUNT(*) FROM member
	</select>
	
	<!-- 소현 : 관리자 페이지 회원 추방(회원 상태 리스트)  추방 버튼을 누를 시 불량 회원으로 변경한다 -->
  <update id="getchangeState">
    UPDATE member SET member_state='불량회원' where member_id=#{param1}
	</update>
</mapper>